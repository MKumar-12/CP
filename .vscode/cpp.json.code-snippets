{
	"cpp snippet":
  {
  "prefix": "Base template",
  "body": [
    "//$1",
    "//T.C. ",
    "//S.C. ",
    "",
    "#include<iostream>",
    "using namespace std;",
    "",
    "int main()",
    "{",
    "",
    "    return 0;",
    "}"
  ],
  "description": "C++ base"
  },

  "cpp snippet2" :
  {
    "prefix": "CP template",
    "body": [
      "//$1",
      "//T.C. ",
      "//S.C. ",
      "",
      "#include <bits/stdc++.h>",
      "using namespace std;",
      "",
      "int main()",
      "{",
      "",
      "    return 0;",
      "}"
    ],
    "description": "C++ CP"  
  },

  "cpp snippet3" :
  {
    "prefix": "tree template",
    "body": [
      "//$1",
      "//T.C. ",
      "//S.C. ",
      "",
      "#include<iostream>",
      "#include<queue>",
      "using namespace std;",
      "",
      "class node {",
      "    public:",
      "        int data;",
      "        node* left;",
      "        node* right;",
      "    ",
      "    node(int d){",
      "        this->data = d;",
      "        this->left = NULL;",
      "        this->right = NULL;",
      "    }",
      "};",
      "",
      "int main()",
      "{",
      "    node* root = NULL;",
      "",
      "    return 0;",
      "}"
    ],
    "description": "C++ trees"  
  }, 
   
  "cpp snippet4": {
    "prefix": "array template",
    "body": [
      "//",
      "//T.C. ",
      "//S.C. ",
      "",
      "#include<iostream>",
      "using namespace std;",
      "",
      "int main()",
      "{",
      "    int n;",
      "    cout<<\"\\nEnter no. of elements : \";",
      "    cin>>n;",
      "    int arr[n];",
      "    cout<<\"\\nElements are : \";",
      "    for(int i = 0; i < n; i++)",
      "        cin>>arr[i];",
      "    return 0;",
      "}"
    ],
    "description": "C++ Arrays"
  }
}


